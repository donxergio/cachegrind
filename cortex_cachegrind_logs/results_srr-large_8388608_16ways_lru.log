==58104== Cachegrind, a cache and branch-prediction profiler
==58104== Copyright (C) 2002-2017, and GNU GPL'd, by Nicholas Nethercote et al.
==58104== Using Valgrind-3.16.1 and LibVEX; rerun with -h for copyright info
==58104== Command: ./srr-large
==58104== 
--58104-- warning: L3 cache found, using its data for the LL simulation.
--58104-- warning: specified LL cache: line_size 64  assoc 11  total_size 25,952,256
--58104-- warning: simulated LL cache: line_size 64  assoc 12  total_size 25,165,824
LRU cache replacement will be used
==58104== brk segment overflow in thread #1: can't grow to 0x4a4b000
==58104== (see section Limitations in user manual)
==58104== NOTE: further instances of this message will not be shown
==58104== 
==58104== Process terminating with default action of signal 11 (SIGSEGV)
==58104==  Access not within mapped region at address 0x0
==58104==    at 0x10952E: get_b (in /home/tkloda/cortexsuite/cortex/srr/srr-large)
==58104==  If you believe this happened as a result of a stack
==58104==  overflow in your program's main thread (unlikely but
==58104==  possible), you can try to increase the size of the
==58104==  main thread stack using the --main-stacksize= flag.
==58104==  The main thread stack size used in this run was 8388608.
==58104== 
==58104== I   refs:      557,606,429
==58104== I1  misses:          1,346
==58104== LLi misses:          1,343
==58104== I1  miss rate:        0.00%
==58104== LLi miss rate:        0.00%
==58104== 
==58104== D   refs:      218,523,805  (136,708,155 rd   + 81,815,650 wr)
==58104== D1  misses:        592,764  (     92,112 rd   +    500,652 wr)
==58104== LLd misses:        344,303  (      2,524 rd   +    341,779 wr)
==58104== D1  miss rate:         0.3% (        0.1%     +        0.6%  )
==58104== LLd miss rate:         0.2% (        0.0%     +        0.4%  )
==58104== 
==58104== LL refs:           594,110  (     93,458 rd   +    500,652 wr)
==58104== LL misses:         345,646  (      3,867 rd   +    341,779 wr)
==58104== LL miss rate:          0.0% (        0.0%     +        0.4%  )
