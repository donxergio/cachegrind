==58498== Cachegrind, a cache and branch-prediction profiler
==58498== Copyright (C) 2002-2017, and GNU GPL'd, by Nicholas Nethercote et al.
==58498== Using Valgrind-3.16.1 and LibVEX; rerun with -h for copyright info
==58498== Command: ./srr-large
==58498== 
--58498-- warning: L3 cache found, using its data for the LL simulation.
--58498-- warning: specified LL cache: line_size 64  assoc 11  total_size 25,952,256
--58498-- warning: simulated LL cache: line_size 64  assoc 12  total_size 25,165,824
FIFO cache replacement will be used
==58498== brk segment overflow in thread #1: can't grow to 0x4a4b000
==58498== (see section Limitations in user manual)
==58498== NOTE: further instances of this message will not be shown
==58498== 
==58498== Process terminating with default action of signal 11 (SIGSEGV)
==58498==  Access not within mapped region at address 0x0
==58498==    at 0x1095B8: get_b (in /home/tkloda/cortexsuite/cortex/srr/srr-large)
==58498==  If you believe this happened as a result of a stack
==58498==  overflow in your program's main thread (unlikely but
==58498==  possible), you can try to increase the size of the
==58498==  main thread stack using the --main-stacksize= flag.
==58498==  The main thread stack size used in this run was 8388608.
==58498== 
==58498== I   refs:      892,303,226
==58498== I1  misses:          3,293
==58498== LLi misses:          1,343
==58498== I1  miss rate:        0.00%
==58498== LLi miss rate:        0.00%
==58498== 
==58498== D   refs:      348,396,604  (224,211,236 rd   + 124,185,368 wr)
==58498== D1  misses:     16,935,899  ( 15,994,068 rd   +     941,831 wr)
==58498== LLd misses:        342,130  (      2,524 rd   +     339,606 wr)
==58498== D1  miss rate:         4.9% (        7.1%     +         0.8%  )
==58498== LLd miss rate:         0.1% (        0.0%     +         0.3%  )
==58498== 
==58498== LL refs:        16,939,192  ( 15,997,361 rd   +     941,831 wr)
==58498== LL misses:         343,473  (      3,867 rd   +     339,606 wr)
==58498== LL miss rate:          0.0% (        0.0%     +         0.3%  )
