==58264== Cachegrind, a cache and branch-prediction profiler
==58264== Copyright (C) 2002-2017, and GNU GPL'd, by Nicholas Nethercote et al.
==58264== Using Valgrind-3.16.1 and LibVEX; rerun with -h for copyright info
==58264== Command: ./srr-large
==58264== 
--58264-- warning: L3 cache found, using its data for the LL simulation.
--58264-- warning: specified LL cache: line_size 64  assoc 11  total_size 25,952,256
--58264-- warning: simulated LL cache: line_size 64  assoc 12  total_size 25,165,824
LIP cache replacement will be used
==58264== brk segment overflow in thread #1: can't grow to 0x4a4b000
==58264== (see section Limitations in user manual)
==58264== NOTE: further instances of this message will not be shown
==58264== 
==58264== Process terminating with default action of signal 11 (SIGSEGV)
==58264==  Access not within mapped region at address 0x0
==58264==    at 0x1095B8: get_b (in /home/tkloda/cortexsuite/cortex/srr/srr-large)
==58264==  If you believe this happened as a result of a stack
==58264==  overflow in your program's main thread (unlikely but
==58264==  possible), you can try to increase the size of the
==58264==  main thread stack using the --main-stacksize= flag.
==58264==  The main thread stack size used in this run was 8388608.
==58264== 
==58264== I   refs:      892,638,246
==58264== I1  misses:          1,346
==58264== LLi misses:          1,343
==58264== I1  miss rate:        0.00%
==58264== LLi miss rate:        0.00%
==58264== 
==58264== D   refs:      348,540,184  (224,309,349 rd   + 124,230,835 wr)
==58264== D1  misses:        520,192  (    131,209 rd   +     388,983 wr)
==58264== LLd misses:        501,954  (    114,394 rd   +     387,560 wr)
==58264== D1  miss rate:         0.1% (        0.1%     +         0.3%  )
==58264== LLd miss rate:         0.1% (        0.1%     +         0.3%  )
==58264== 
==58264== LL refs:           521,538  (    132,555 rd   +     388,983 wr)
==58264== LL misses:         503,297  (    115,737 rd   +     387,560 wr)
==58264== LL miss rate:          0.0% (        0.0%     +         0.3%  )
