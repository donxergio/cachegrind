==58494== Cachegrind, a cache and branch-prediction profiler
==58494== Copyright (C) 2002-2017, and GNU GPL'd, by Nicholas Nethercote et al.
==58494== Using Valgrind-3.16.1 and LibVEX; rerun with -h for copyright info
==58494== Command: ./srr-large
==58494== 
--58494-- warning: L3 cache found, using its data for the LL simulation.
--58494-- warning: specified LL cache: line_size 64  assoc 11  total_size 25,952,256
--58494-- warning: simulated LL cache: line_size 64  assoc 12  total_size 25,165,824
FIFO cache replacement will be used
==58494== brk segment overflow in thread #1: can't grow to 0x4a4b000
==58494== (see section Limitations in user manual)
==58494== NOTE: further instances of this message will not be shown
==58494== 
==58494== Process terminating with default action of signal 11 (SIGSEGV)
==58494==  Access not within mapped region at address 0x0
==58494==    at 0x1095B8: get_b (in /home/tkloda/cortexsuite/cortex/srr/srr-large)
==58494==  If you believe this happened as a result of a stack
==58494==  overflow in your program's main thread (unlikely but
==58494==  possible), you can try to increase the size of the
==58494==  main thread stack using the --main-stacksize= flag.
==58494==  The main thread stack size used in this run was 8388608.
==58494== 
==58494== I   refs:      1,399,031,691
==58494== I1  misses:            7,067
==58494== LLi misses:            1,343
==58494== I1  miss rate:          0.00%
==58494== LLi miss rate:          0.00%
==58494== 
==58494== D   refs:        545,014,542  (356,666,989 rd   + 188,347,553 wr)
==58494== D1  misses:       27,487,575  ( 26,285,412 rd   +   1,202,163 wr)
==58494== LLd misses:          343,226  (      2,524 rd   +     340,702 wr)
==58494== D1  miss rate:           5.0% (        7.4%     +         0.6%  )
==58494== LLd miss rate:           0.1% (        0.0%     +         0.2%  )
==58494== 
==58494== LL refs:          27,494,642  ( 26,292,479 rd   +   1,202,163 wr)
==58494== LL misses:           344,569  (      3,867 rd   +     340,702 wr)
==58494== LL miss rate:            0.0% (        0.0%     +         0.2%  )
