==58164== Cachegrind, a cache and branch-prediction profiler
==58164== Copyright (C) 2002-2017, and GNU GPL'd, by Nicholas Nethercote et al.
==58164== Using Valgrind-3.16.1 and LibVEX; rerun with -h for copyright info
==58164== Command: ./srr-large
==58164== 
--58164-- warning: L3 cache found, using its data for the LL simulation.
--58164-- warning: specified LL cache: line_size 64  assoc 11  total_size 25,952,256
--58164-- warning: simulated LL cache: line_size 64  assoc 12  total_size 25,165,824
LIP cache replacement will be used
==58164== brk segment overflow in thread #1: can't grow to 0x4a4b000
==58164== (see section Limitations in user manual)
==58164== NOTE: further instances of this message will not be shown
==58164== 
==58164== Process terminating with default action of signal 11 (SIGSEGV)
==58164==  Access not within mapped region at address 0x0
==58164==    at 0x1095B8: get_b (in /home/tkloda/cortexsuite/cortex/srr/srr-large)
==58164==  If you believe this happened as a result of a stack
==58164==  overflow in your program's main thread (unlikely but
==58164==  possible), you can try to increase the size of the
==58164==  main thread stack using the --main-stacksize= flag.
==58164==  The main thread stack size used in this run was 8388608.
==58164== 
==58164== I   refs:      892,172,606
==58164== I1  misses:          2,495
==58164== LLi misses:          1,469
==58164== I1  miss rate:        0.00%
==58164== LLi miss rate:        0.00%
==58164== 
==58164== D   refs:      348,340,624  (224,172,983 rd   + 124,167,641 wr)
==58164== D1  misses:     19,256,743  ( 18,442,128 rd   +     814,615 wr)
==58164== LLd misses:        625,390  (    124,604 rd   +     500,786 wr)
==58164== D1  miss rate:         5.5% (        8.2%     +         0.7%  )
==58164== LLd miss rate:         0.2% (        0.1%     +         0.4%  )
==58164== 
==58164== LL refs:        19,259,238  ( 18,444,623 rd   +     814,615 wr)
==58164== LL misses:         626,859  (    126,073 rd   +     500,786 wr)
==58164== LL miss rate:          0.1% (        0.0%     +         0.4%  )
