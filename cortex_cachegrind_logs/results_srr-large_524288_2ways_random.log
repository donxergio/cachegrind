==58386== Cachegrind, a cache and branch-prediction profiler
==58386== Copyright (C) 2002-2017, and GNU GPL'd, by Nicholas Nethercote et al.
==58386== Using Valgrind-3.16.1 and LibVEX; rerun with -h for copyright info
==58386== Command: ./srr-large
==58386== 
--58386-- warning: L3 cache found, using its data for the LL simulation.
--58386-- warning: specified LL cache: line_size 64  assoc 11  total_size 25,952,256
--58386-- warning: simulated LL cache: line_size 64  assoc 12  total_size 25,165,824
Random cache replacement will be used
==58386== brk segment overflow in thread #1: can't grow to 0x4a4b000
==58386== (see section Limitations in user manual)
==58386== NOTE: further instances of this message will not be shown
==58386== 
==58386== Process terminating with default action of signal 11 (SIGSEGV)
==58386==  Access not within mapped region at address 0x0
==58386==    at 0x1095B8: get_b (in /home/tkloda/cortexsuite/cortex/srr/srr-large)
==58386==  If you believe this happened as a result of a stack
==58386==  overflow in your program's main thread (unlikely but
==58386==  possible), you can try to increase the size of the
==58386==  main thread stack using the --main-stacksize= flag.
==58386==  The main thread stack size used in this run was 8388608.
==58386== 
==58386== I   refs:      892,172,046
==58386== I1  misses:          1,359
==58386== LLi misses:          1,345
==58386== I1  miss rate:        0.00%
==58386== LLi miss rate:        0.00%
==58386== 
==58386== D   refs:      348,340,384  (224,172,819 rd   + 124,167,565 wr)
==58386== D1  misses:        804,103  (    256,835 rd   +     547,268 wr)
==58386== LLd misses:        432,646  (     58,946 rd   +     373,700 wr)
==58386== D1  miss rate:         0.2% (        0.1%     +         0.4%  )
==58386== LLd miss rate:         0.1% (        0.0%     +         0.3%  )
==58386== 
==58386== LL refs:           805,462  (    258,194 rd   +     547,268 wr)
==58386== LL misses:         433,991  (     60,291 rd   +     373,700 wr)
==58386== LL miss rate:          0.0% (        0.0%     +         0.3%  )
