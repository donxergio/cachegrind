==58316== Cachegrind, a cache and branch-prediction profiler
==58316== Copyright (C) 2002-2017, and GNU GPL'd, by Nicholas Nethercote et al.
==58316== Using Valgrind-3.16.1 and LibVEX; rerun with -h for copyright info
==58316== Command: ./srr-large
==58316== 
--58316-- warning: L3 cache found, using its data for the LL simulation.
--58316-- warning: specified LL cache: line_size 64  assoc 11  total_size 25,952,256
--58316-- warning: simulated LL cache: line_size 64  assoc 12  total_size 25,165,824
Random cache replacement will be used
==58316== brk segment overflow in thread #1: can't grow to 0x4a4b000
==58316== (see section Limitations in user manual)
==58316== NOTE: further instances of this message will not be shown
==58316== 
==58316== Process terminating with default action of signal 11 (SIGSEGV)
==58316==  Access not within mapped region at address 0x0
==58316==    at 0x1095B8: get_b (in /home/tkloda/cortexsuite/cortex/srr/srr-large)
==58316==  If you believe this happened as a result of a stack
==58316==  overflow in your program's main thread (unlikely but
==58316==  possible), you can try to increase the size of the
==58316==  main thread stack using the --main-stacksize= flag.
==58316==  The main thread stack size used in this run was 8388608.
==58316== 
==58316== I   refs:      892,141,386
==58316== I1  misses:          5,745
==58316== LLi misses:          1,442
==58316== I1  miss rate:        0.00%
==58316== LLi miss rate:        0.00%
==58316== 
==58316== D   refs:      348,327,244  (224,163,840 rd   + 124,163,404 wr)
==58316== D1  misses:     21,493,897  ( 20,228,109 rd   +   1,265,788 wr)
==58316== LLd misses:        435,061  (     60,101 rd   +     374,960 wr)
==58316== D1  miss rate:         6.2% (        9.0%     +         1.0%  )
==58316== LLd miss rate:         0.1% (        0.0%     +         0.3%  )
==58316== 
==58316== LL refs:        21,499,642  ( 20,233,854 rd   +   1,265,788 wr)
==58316== LL misses:         436,503  (     61,543 rd   +     374,960 wr)
==58316== LL miss rate:          0.0% (        0.0%     +         0.3%  )
