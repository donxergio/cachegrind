==58198== Cachegrind, a cache and branch-prediction profiler
==58198== Copyright (C) 2002-2017, and GNU GPL'd, by Nicholas Nethercote et al.
==58198== Using Valgrind-3.16.1 and LibVEX; rerun with -h for copyright info
==58198== Command: ./srr-large
==58198== 
--58198-- warning: L3 cache found, using its data for the LL simulation.
--58198-- warning: specified LL cache: line_size 64  assoc 11  total_size 25,952,256
--58198-- warning: simulated LL cache: line_size 64  assoc 12  total_size 25,165,824
LIP cache replacement will be used
==58198== brk segment overflow in thread #1: can't grow to 0x4a4b000
==58198== (see section Limitations in user manual)
==58198== NOTE: further instances of this message will not be shown
==58198== 
==58198== Process terminating with default action of signal 11 (SIGSEGV)
==58198==  Access not within mapped region at address 0x0
==58198==    at 0x1095B8: get_b (in /home/tkloda/cortexsuite/cortex/srr/srr-large)
==58198==  If you believe this happened as a result of a stack
==58198==  overflow in your program's main thread (unlikely but
==58198==  possible), you can try to increase the size of the
==58198==  main thread stack using the --main-stacksize= flag.
==58198==  The main thread stack size used in this run was 8388608.
==58198== 
==58198== I   refs:      892,228,186
==58198== I1  misses:          1,354
==58198== LLi misses:          1,347
==58198== I1  miss rate:        0.00%
==58198== LLi miss rate:        0.00%
==58198== 
==58198== D   refs:      348,364,444  (224,189,260 rd   + 124,175,184 wr)
==58198== D1  misses:        970,010  (    373,324 rd   +     596,686 wr)
==58198== LLd misses:        634,205  (    130,335 rd   +     503,870 wr)
==58198== D1  miss rate:         0.3% (        0.2%     +         0.5%  )
==58198== LLd miss rate:         0.2% (        0.1%     +         0.4%  )
==58198== 
==58198== LL refs:           971,364  (    374,678 rd   +     596,686 wr)
==58198== LL misses:         635,552  (    131,682 rd   +     503,870 wr)
==58198== LL miss rate:          0.1% (        0.0%     +         0.4%  )
