==58384== Cachegrind, a cache and branch-prediction profiler
==58384== Copyright (C) 2002-2017, and GNU GPL'd, by Nicholas Nethercote et al.
==58384== Using Valgrind-3.16.1 and LibVEX; rerun with -h for copyright info
==58384== Command: ./srr-large
==58384== 
--58384-- warning: L3 cache found, using its data for the LL simulation.
--58384-- warning: specified LL cache: line_size 64  assoc 11  total_size 25,952,256
--58384-- warning: simulated LL cache: line_size 64  assoc 12  total_size 25,165,824
Random cache replacement will be used
==58384== brk segment overflow in thread #1: can't grow to 0x4a4b000
==58384== (see section Limitations in user manual)
==58384== NOTE: further instances of this message will not be shown
==58384== 
==58384== Process terminating with default action of signal 11 (SIGSEGV)
==58384==  Access not within mapped region at address 0x0
==58384==    at 0x10952E: get_b (in /home/tkloda/cortexsuite/cortex/srr/srr-large)
==58384==  If you believe this happened as a result of a stack
==58384==  overflow in your program's main thread (unlikely but
==58384==  possible), you can try to increase the size of the
==58384==  main thread stack using the --main-stacksize= flag.
==58384==  The main thread stack size used in this run was 8388608.
==58384== 
==58384== I   refs:      1,230,906,644
==58384== I1  misses:            1,646
==58384== LLi misses:            1,347
==58384== I1  miss rate:          0.00%
==58384== LLi miss rate:          0.00%
==58384== 
==58384== D   refs:        479,777,065  (312,711,363 rd   + 167,065,702 wr)
==58384== D1  misses:        1,640,898  (  1,065,731 rd   +     575,167 wr)
==58384== LLd misses:          456,454  (     83,523 rd   +     372,931 wr)
==58384== D1  miss rate:           0.3% (        0.3%     +         0.3%  )
==58384== LLd miss rate:           0.1% (        0.0%     +         0.2%  )
==58384== 
==58384== LL refs:           1,642,544  (  1,067,377 rd   +     575,167 wr)
==58384== LL misses:           457,801  (     84,870 rd   +     372,931 wr)
==58384== LL miss rate:            0.0% (        0.0%     +         0.2%  )
